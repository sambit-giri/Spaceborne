Usage
=====

================
Running the Code
================

All the available options and configurations can be found, along with their explanation, 
in the ``example_config.yaml`` file. Type hints for all of the different options are 
included in the comments. To run `Spaceborne` **using this configuration file**, 
simply run:

.. code-block:: bash
   
   $ python main.py

If you want to use a configuration file with a different name and/or path, you can do it with

.. code-block:: bash
   
   $ python main.py --config=<path_to_config_file>

for example:

.. code-block:: bash

   $ python main.py --config="path/to/my/config/config.yaml"


To display the plots generated by the code, add the ``--show_plots`` flag:

.. code-block:: bash

   $ python main.py --config="path/to/my/config/config.yaml" --show_plots

Keep in mind that quite a large amount of plots will be generated in this case. 
In particular, if you decide to use input :math:`C_\ell`, the code will overplot these 
against the ones generated internally (either with ``CLOE`` or ``CCL``), for quick 
visual inspection.

====
Tips
====


+++++
Speed
+++++

``Spaceborne`` offers the possibility to cache the results of the most time-consuming 
operations for later use. In particular, these are the survey covariance 
:math:`\sigma^2_b(z_1, z_2)` and the connected trispectrum 
:math:`T^{ABCD}(a, k_1, k_2)`. When running the code for the first time, set 

.. code-block:: yaml

   covariance:
      load_cached_sigma2_b: False
      
   PyCCL:
      load_cached_tkka: False 

to avoid running into errors (the files do not exist yet). If you rerun the code 
**with consistent settings**, you can load these in later runs changing the 
configurations above to ``True``. The code will not check the consistency of, 
say, the cosmological parameters you used to compute the cached quantities.

Note that these and other expensive operations are run in parallel, so the code will 
run faster simply by increasing the number of threads used:

.. code-block:: yaml

   misc:
      num_threads: 40
